#!/usr/bin/env sh

# Set your personal data here:
#rssfile="rss.xml"
blogfile="index.html"
website="https://mzp.dedyn.io/"
indexfile="blogindex.html"
stylesheet="..\/style.css" # Characters should be escaped for this variable.
dir=$(pwd)
draftdir="$dir"/blog/.drafts
blogdir="$dir"/blog

# Set vi if $EDITOR not set
[ -z $EDITOR ] && EDITOR="mousepad";

# See other variables defined later, such as `header` and `webdate` for more customizability.

getHelp() {
	echo -e "This system will take the blog entries you write and add them into the RSS file and HTML file of your choosing. Set which files to use by editing the 'lb' file directly and changing the variables at the top.\n"
	echo -e "To fully prepare these files, add the following line to both files where you want the content to be added:\n"
	echo -e "<!-- LB -->\n"
	echo -e "Usage: 'new': create new draft; 'finalize': finish draft and add it to the RSS and HTML page; 'delete': delete a finished page.\n"
	echo -e "As you finalize posts, they will be appended in the appropriate format below that line.\n"
	echo -e "Blog posts will be stored in 'blog/' and drafts will be in 'blog/.drafts/'. To delete drafts, you only need delete their .html files directly, but use the 'lb delete' command to remove finalized posts since they appear in three places."
}

listandReturn() {
	echo "Listing contents of $1."
	ls -rc $1 | awk -F '/' '{print $NF}' | nl
	read -rp "Pick an entry by number to $2, or press ctrl-c to cancel. " number
	chosen=$(ls -rc $1 | nl | grep -w  "$number" | awk '{print $2}')
}

getTitle() {
	echo "Post will be stored as draft in $draftdir until finalized."
	read -rp "Give a title for your post: " title
	url=$(echo "$title" | tr -d '[:punct:]' | tr " " "-" | tr '[:upper:]' '[:lower:]')
	grep "id='$url'" "$blogfile" &>/dev/null && lbdupnum=1 && while [ grep "id='$url'" "$blogfile" ]; do lbdupnum=$((lbdupnum+1)); done
	[ ! -z ${lbdupnum+x} ] && url="$url"-"$lbdupnum"
	return 0
}

postNew() {
	mkdir -p "$draftdir"
	echo -e "<h2 id='$url'><a href=\"blog/$url.html\">$title</a></h2>" >> "$draftdir"/$url.html && $EDITOR "$draftdir"/$url.html
}

finalize() {
	url=$(grep -o "<h2 id='\(.\)*'>" "$draftdir"/"$chosen" | cut -d "'" -f2)
	title=$(grep -o "<h2 id='\(.\)*h2>" "$draftdir"/"$chosen" | sed -e 's/<[^>]*>//g')
	#echo "AddDescription \"$title\" $chosen" >> "$blogdir"/.htaccess
	#rssdate=$(date '+%a, %d %b %Y %H:%M:%S %z')
	webdate=$(date '+%a, %d %b %Y %H:%M:%S %z')
	listformat='<li>'$(date '+%Y %b %d')' &ndash; <a href="blog/'$url'.html">'$title'</a></li>'
	tmpdir=$(mktemp -d)
	#echo -e "\n<item>\n<title>$title</title>\n<guid>$website$blogfile#$url</guid>\n<pubDate>$rssdate</pubDate>\n<description><![CDATA[\n$(awk 'a==1;/^$/{a=1}' "$draftdir"/"$chosen")\n]]></description>\n</item>\n"> $tmpdir/rss.xml
	echo -e "\n<div class=\"entry\">\n$(cat "$draftdir"/"$chosen")\n<br>\n<small>$webdate&mdash;<a href=\"$blogfile#$url\">link</a></small>\n</div>\n" > $tmpdir/html.html
	sed -i "/<!-- LB -->/r $tmpdir/html.html" $blogfile
	#sed -i "/<!-- LB -->/r $tmpdir/rss.xml" $rssfile
	sed -i "/<!-- LB -->/a $listformat" $indexfile
	header="<!DOCTYPE HTML>\n<html lang=\"en\">\n<head>\n<title>$title<\/title>\n<meta name=viewport content=\"width=device-width, initial-scale=1, user-scalable=yes\">\n<meta name=\"theme-color\" content=\"#FAB81E\">\n<meta name=\"msapplication-TileColor\" content=\"#FAB81E\">\n<meta name=\"msapplication-TileImage\" content=\"\/images\/icons\/mstile-150x150.png\">\n<meta name=\"mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n<meta name=\"apple-mobile-web-app-title\" content=\"Ila_MZP&#39;s contact info.\">\n<meta name=\"application-name\" content=\"Ilya_MZP Blog\">\n<link rel=\"apple-touch-icon\" href=\"\/images\/icons\/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image\/png\" href=\"\/images\/icons\/favicon-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" type=\"image\/png\" href=\"\/images\/icons\/favicon-16x16.png\" sizes=\"16x16\">\n<link rel=\"icon\" href=\"\/favicon.ico\" type=\"image\/x-icon\">\n<link rel=\"stylesheet\" href=\"\/style.css\">\n<link rel=\"manifest\" href=\"\/manifest.json\">\n<script src=\"\/index.js\" defer><\/script>\n<script src=\"\/menu.js\" defer><\/script>\n<\/head>\n<body>\n<header>\n<span class=\"header__icon\">\n<svg class=\"menu__icon no--select\" width=\"24px\" height=\"24px\" viewBox=\"0 0 48 48\" fill=\"#fff\">\n<path d=\"M6 36h36v-4H6v4zm0-10h36v-4H6v4zm0-14v4h36v-4H6z\"><\/path>\n<\/svg>\n<\/span>\n<span class=\"header__title no--select\">Little Blog<\/span>\n<\/header>\n<div class=\"menu\">\n<div class=\"menu__header\"><\/div>\n<ul class=\"menu__list\">\n<li>\n<a href=\"\/index.html\">Home Page<\/a>\n<\/li>\n<li>\n<a href=\"\/blogindex.html\">Blog Index<\/a>\n<\/li>\n<li>\n<a href=\"\/contact.html\">Contact Info<\/a>\n<\/li>\n<li>\n<a id=\"notify-buttn\" href=\"#\">Notifications Subscribe<\/a>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"menu__overlay\"><\/div>\n<div class=\"app__content\">\n<div class=\"entry\">\n"
	sed  "s/href=\"/href=\"..\//g;s/\.\.\/http/http/g;0,/^/s//$header/;0,/<h2 id=/s//<h1 id=/;0,/h2>/s//h1>/" "$draftdir"/"$chosen" > "$blogdir"/"$chosen"
	echo -e "\n</div>\n</div>\n</body>" >> "$blogdir"/"$chosen"
	rm "$draftdir"/"$chosen"
}

delete() {
	base=$(basename $(echo "$chosen" | cut -f1 -d'.'))
	read -rp "Really delete \"$base\"? (y/N) " choice
	[[ $choice =~ [Yy] ]] || exit
	#sed -i "/<item/{:a;N;/<\/item>/!ba};/$base/d" $rssfile && echo "Entry removed from RSS feed file."
	sed -i "/<div/{:a;N;/<\/div>/!ba};/id='$base'/d" $blogfile && echo "HTML code removed from blogfile."
	sed -i "/<li>.*<a href=\"blog\/$base.html\">/d" $indexfile && echo "Index file entry removed."
	rm "$chosen" && echo "Blog post deleted from directories."
}

discard() {
	base=$(echo "$chosen" | cut -f1 -d'.')
	read -rp "Really discard \"$(basename $chosen)\"? (y/N) " choice
	[[ $choice =~ [Yy] ]] || exit
	rm "$chosen" && echo "Blog draft discarded."
	}

case "$1" in
	new) getTitle && postNew ;;
	discard) listandReturn "$draftdir/*.html" discard && discard ;;
	finalize) listandReturn "$draftdir" finalize && finalize ;;
	delete) listandReturn "$blogdir/*.html" delete && delete ;;
	edit) listandReturn "$draftdir/*.html" edit && $EDITOR "$chosen" ;;
	*) getHelp ;;
esac
